{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lambda\\\\WebApplicationsII\\\\AdvancedWebApplications\\\\Sprint\\\\web-sprint-challenge-advanced-web-applications\\\\client\\\\src\\\\components\\\\BubblePage.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport Bubbles from \"./Bubbles\";\nimport ColorList from \"./ColorList\";\nimport { BubbleContext } from \"../contexts/BubbleContext\";\nimport { axiosWithAuth } from \"../utils/AxiosWithAuth\";\n\nconst BubblePage = () => {\n  const [colorList, setColorList] = useState([]);\n  const {\n    setLoading\n  } = useContext(BubbleContext); // fetch your colors data from the server when the component mounts\n  // set that data to the colorList state property\n\n  useEffect(() => {\n    setLoading(true);\n    axiosWithAuth().get(`http://localhost:5000/api/colors`).then(res => {\n      console.log(\"Colors: \", res.data);\n      setColorList(res.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(\"Error getting colors: \", err);\n      setLoading(false);\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(ColorList, {\n    colors: colorList,\n    updateColors: setColorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Bubbles, {\n    colors: colorList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default BubblePage;","map":{"version":3,"sources":["D:/Lambda/WebApplicationsII/AdvancedWebApplications/Sprint/web-sprint-challenge-advanced-web-applications/client/src/components/BubblePage.js"],"names":["React","useState","useEffect","useContext","axios","Bubbles","ColorList","BubbleContext","axiosWithAuth","BubblePage","colorList","setColorList","setLoading","get","then","res","console","log","data","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AACA,SAAQC,aAAR,QAA4B,wBAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAACW,IAAAA;AAAD,MAAeT,UAAU,CAACI,aAAD,CAA/B,CAFuB,CAGvB;AACA;;AACEL,EAAAA,SAAS,CAAC,MAAK;AACXU,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,IAAAA,aAAa,GAAGK,GAAhB,CAAqB,kCAArB,EACKC,IADL,CACUC,GAAG,IAAG;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAG,CAACG,IAA5B;AACAP,MAAAA,YAAY,CAACI,GAAG,CAACG,IAAL,CAAZ;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KALL,EAMKO,KANL,CAMWC,GAAG,IAAG;AACTJ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCG,GAAtC;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATL;AAUH,GAZQ,EAYP,EAZO,CAAT;AAcF,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEF,SAAnB;AAA8B,IAAA,YAAY,EAAEC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAzBD;;AA2BA,eAAeD,UAAf","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Bubbles from \"./Bubbles\";\r\nimport ColorList from \"./ColorList\";\r\nimport {BubbleContext} from \"../contexts/BubbleContext\";\r\nimport {axiosWithAuth} from \"../utils/AxiosWithAuth\";\r\n\r\nconst BubblePage = () => {\r\n  const [colorList, setColorList] = useState([]);\r\n  const {setLoading} = useContext(BubbleContext);\r\n  // fetch your colors data from the server when the component mounts\r\n  // set that data to the colorList state property\r\n    useEffect(() =>{\r\n        setLoading(true);\r\n        axiosWithAuth().get(`http://localhost:5000/api/colors`)\r\n            .then(res =>{\r\n                console.log(\"Colors: \", res.data);\r\n                setColorList(res.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(err =>{\r\n                console.log(\"Error getting colors: \", err);\r\n                setLoading(false);\r\n            });\r\n    },[]);\r\n\r\n  return (\r\n    <>\r\n      <ColorList colors={colorList} updateColors={setColorList} />\r\n      <Bubbles colors={colorList} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BubblePage;"]},"metadata":{},"sourceType":"module"}